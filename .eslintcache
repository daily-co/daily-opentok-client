[{"/Users/jamsea/git/daily-tokbox/src/OTEventEmitter.ts":"1","/Users/jamsea/git/daily-tokbox/src/Publisher.ts":"2","/Users/jamsea/git/daily-tokbox/src/Session.ts":"3","/Users/jamsea/git/daily-tokbox/src/Subscriber.ts":"4","/Users/jamsea/git/daily-tokbox/src/env.d.ts":"5","/Users/jamsea/git/daily-tokbox/src/example.ts":"6","/Users/jamsea/git/daily-tokbox/src/global.d.ts":"7","/Users/jamsea/git/daily-tokbox/src/index.ts":"8","/Users/jamsea/git/daily-tokbox/vite.config.js":"9"},{"size":2154,"mtime":1659969496424,"results":"10","hashOfConfig":"11"},{"size":4288,"mtime":1659969332168,"results":"12","hashOfConfig":"11"},{"size":8038,"mtime":1659970548329,"results":"13","hashOfConfig":"11"},{"size":3125,"mtime":1659969182881,"results":"14","hashOfConfig":"11"},{"size":276,"mtime":1659668894103,"results":"15","hashOfConfig":"11"},{"size":1636,"mtime":1659970374072,"results":"16","hashOfConfig":"11"},{"size":126,"mtime":1659668894103,"results":"17","hashOfConfig":"11"},{"size":6071,"mtime":1659973175247,"results":"18","hashOfConfig":"11"},{"size":768,"mtime":1659970281490,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":3,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"tgq8v3",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":5,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":1,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":5,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jamsea/git/daily-tokbox/src/OTEventEmitter.ts",["52","53","54","55","56","57"],[],"import { Event } from \"@opentok/client\";\nimport { EventEmitter } from \"events\";\n\ninterface EventEmitterOptions {\n  /**\n   * Enables automatic capturing of promise rejection.\n   */\n  captureRejections?: boolean | undefined;\n}\n\nexport class OTEventEmitter<EventMap> {\n  ee: EventEmitter;\n  constructor(options?: EventEmitterOptions | undefined) {\n    this.ee = new EventEmitter(options);\n  }\n  on<EventName extends keyof EventMap>(\n    eventName: EventName,\n    callback: (event: EventMap[EventName]) => void,\n    context?: object\n  ): void;\n\n  on(\n    eventName: string,\n    callback: (event: Event<string, any>) => void,\n    context?: object\n  ): void;\n\n  on(eventMap: object, context?: object): void;\n\n  on(eventName: string | object, callback: any, context?: object): void {\n    if (typeof eventName === \"string\" && typeof callback === \"function\") {\n      this.ee.on(eventName, callback);\n    }\n  }\n\n  once<EventName extends keyof EventMap>(\n    eventName: EventName,\n    callback: (event: EventMap[EventName]) => void,\n    context?: object\n  ): void;\n\n  once(\n    eventName: string,\n    callback: (event: Event<string, any>) => void,\n    context?: object\n  ): void;\n\n  once(eventMap: object, context?: object): void;\n\n  once(eventName: any, callback: any, context?: any): void {\n    if (typeof eventName !== \"string\") {\n      throw new Error(\"eventName must be a string\");\n    }\n    if (typeof callback !== \"function\") {\n      throw new Error(\"callback must be a function\");\n    }\n    this.ee.once(eventName, callback);\n  }\n\n  off<EventName extends keyof EventMap>(\n    eventName?: EventName,\n    callback?: (event: EventMap[EventName]) => void,\n    context?: object\n  ): void;\n\n  off(\n    eventName?: string,\n    callback?: (event: Event<string, any>) => void,\n    context?: object\n  ): void;\n\n  off(eventMap: object, context?: object): void;\n\n  off(eventName: any, callback: any, context?: any): void {\n    if (typeof eventName !== \"string\") {\n      throw new Error(\"eventName must be a string\");\n    }\n    if (typeof callback !== \"function\") {\n      throw new Error(\"callback must be a function\");\n    }\n    this.ee.off(eventName, callback);\n  }\n}\n","/Users/jamsea/git/daily-tokbox/src/Publisher.ts",["58","59","60","61","62","63","64","65","66","67","68","69"],[],"import {\n  Event,\n  OTError,\n  PublisherRtcStatsReportArr,\n  PublisherStatsArr,\n  PublisherStyle,\n  Stream,\n  VideoContentHint,\n  VideoDimensionsChangedEvent,\n  VideoFilter,\n} from \"@opentok/client\";\nimport { OTEventEmitter } from \"./OTEventEmitter\";\n\ntype PublisherProperties = OT.PublisherProperties & { dailyElementId?: string };\n\nexport class Publisher extends OTEventEmitter<{\n  accessAllowed: Event<\"accessAllowed\", Publisher>;\n  accessDenied: Event<\"accessDenied\", Publisher>;\n  accessDialogClosed: Event<\"accessDialogClosed\", Publisher>;\n  accessDialogOpened: Event<\"accessDialogOpened\", Publisher>;\n\n  audioLevelUpdated: Event<\"audioLevelUpdated\", Publisher> & {\n    audioLevel: number;\n  };\n\n  destroyed: Event<\"destroyed\", Publisher>;\n\n  mediaStopped: Event<\"mediaStopped\", Publisher> & {\n    track: MediaStreamTrack | undefined;\n  };\n\n  streamCreated: Event<\"streamCreated\", Publisher> & {\n    stream: Stream;\n  };\n\n  streamDestroyed: Event<\"streamDestroyed\", Publisher> & {\n    stream: Stream;\n    reason: string;\n  };\n\n  videoDimensionsChanged: VideoDimensionsChangedEvent<Publisher>;\n\n  videoElementCreated: Event<\"videoElementCreated\", Publisher> & {\n    element: HTMLVideoElement | HTMLObjectElement;\n  };\n\n  muteForced: Event<\"muteForced\", Publisher>;\n}> {\n  dailyElementId?: string;\n  accessAllowed: boolean;\n  width?: string;\n  height?: string;\n  insertMode?: \"replace\" | \"after\" | \"before\" | \"append\";\n  constructor({\n    width,\n    height,\n    insertMode,\n    dailyElementId,\n  }: PublisherProperties) {\n    super();\n    this.width = width ? width.toString() : undefined;\n    this.height = height ? height.toString() : undefined;\n    this.insertMode = insertMode;\n\n    this.dailyElementId = dailyElementId;\n    this.accessAllowed = true;\n  }\n\n  destroy(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  getImgData(): string | null {\n    throw new Error(\"Method not implemented.\");\n  }\n  getStats(\n    callback: (error?: OTError, stats?: PublisherStatsArr) => void\n  ): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  getRtcStatsReport(): Promise<PublisherRtcStatsReportArr> {\n    return new Promise((resolve, reject) => {\n      reject(new Error(\"Not implemented\"));\n    });\n  }\n  getStyle(): PublisherProperties {\n    throw new Error(\"Not implemented\");\n  }\n  applyVideoFilter(videoFilter: VideoFilter): Promise<void> {\n    return new Promise((resolve, reject) => {\n      reject(new Error(\"Not implemented\"));\n    });\n  }\n  getVideoFilter(): VideoFilter | null {\n    throw new Error(\"Method not implemented.\");\n  }\n  clearVideoFilter(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      reject(new Error(\"Not implemented\"));\n    });\n  }\n  publishAudio(value: boolean): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  publishVideo(value: boolean): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  publishCaptions(value: boolean): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  cycleVideo(): Promise<{ deviceId: string }> {\n    return new Promise((resolve, reject) => {\n      reject(new Error(\"Not implemented\"));\n    });\n  }\n  setAudioSource(audioSource: string | MediaStreamTrack): Promise<undefined> {\n    return new Promise((resolve, reject) => {\n      throw new Error(\"Method not implemented.\");\n    });\n  }\n  getAudioSource(): MediaStreamTrack {\n    throw new Error(\"Method not implemented.\");\n  }\n  setVideoSource(videoSourceId: string): Promise<undefined> {\n    return new Promise((resolve, reject) => {\n      reject(new Error(\"Not implemented\"));\n    });\n  }\n  getVideoContentHint(): VideoContentHint {\n    throw new Error(\"Method not implemented.\");\n  }\n  setVideoContentHint(hint: VideoContentHint): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  getVideoSource(): {\n    deviceId: string | null;\n    type: string | null;\n    track: MediaStreamTrack | null;\n  } {\n    throw new Error(\"Method not implemented.\");\n  }\n  setStyle<Style extends keyof PublisherStyle>(\n    style: Style,\n    value: PublisherStyle[Style]\n  ): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  videoWidth(): number | undefined {\n    throw new Error(\"Method not implemented.\");\n  }\n  videoHeight(): number | undefined {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n","/Users/jamsea/git/daily-tokbox/src/Session.ts",["70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99"],[],"import {\n  Connection,\n  OTError,\n  Event,\n  Stream,\n  SubscriberProperties,\n} from \"@opentok/client\";\nimport { DailyEventObjectTrack } from \"@daily-co/daily-js\";\nimport { OTEventEmitter } from \"./OTEventEmitter\";\nimport { Publisher } from \"./Publisher\";\nimport { Subscriber } from \"./Subscriber\";\n\ntype DailyStream = Stream & {\n  dailyEvent: DailyEventObjectTrack;\n};\n\nexport class Session extends OTEventEmitter<{\n  archiveStarted: Event<\"archiveStarted\", Session> & {\n    id: string;\n    name: string;\n  };\n\n  archiveStopped: Event<\"archiveStopped\", Session> & {\n    id: string;\n    name: string;\n  };\n\n  connectionCreated: Event<\"connectionCreated\", Session> & {\n    connection: Connection;\n  };\n\n  connectionDestroyed: Event<\"connectionDestroyed\", Session> & {\n    connection: Connection;\n    reason: string;\n  };\n\n  sessionConnected: Event<\"sessionConnected\", Session>;\n\n  sessionDisconnected: Event<\"sessionDisconnected\", Session> & {\n    reason: string;\n  };\n\n  sessionReconnected: Event<\"sessionReconnected\", Session>;\n  sessionReconnecting: Event<\"sessionReconnecting\", Session>;\n\n  signal: Event<\"signal\", Session> & {\n    type?: string;\n    data?: string;\n    from: OT.Connection | null;\n  };\n\n  streamCreated: Event<\"streamCreated\", Session> & {\n    stream: Stream;\n  };\n\n  streamDestroyed: Event<\"streamDestroyed\", Session> & {\n    stream: Stream;\n    reason: string;\n  };\n\n  streamPropertyChanged: Event<\"streamPropertyChanged\", Session> & {\n    stream: Stream;\n  } & (\n      | { changedProperty: \"hasAudio\"; oldValue: boolean; newValue: boolean }\n      | { changedProperty: \"hasVideo\"; oldValue: boolean; newValue: boolean }\n      | {\n          changedProperty: \"videoDimensions\";\n          oldValue: OT.Dimensions;\n          newValue: OT.Dimensions;\n        }\n    );\n\n  muteForced: Event<\"muteForced\", Session>;\n}> {\n  capabilities: {\n    forceDisconnect: number;\n    forceUnpublish: number;\n    forceMute: number;\n    publish: number;\n    subscribe: number;\n  };\n  sessionId: string;\n  connection?: OT.Connection;\n\n  constructor(apiKey: string, sessionId: string, opt: any) {\n    super();\n    this.sessionId = sessionId;\n\n    // TODO(jamsea): Figure out how to connect this to the daily call object\n    // seems related to room tokens https://tokbox.com/developer/sdks/js/reference/Capabilities.html\n    this.capabilities = {\n      forceDisconnect: 1,\n      forceUnpublish: 1,\n      forceMute: 1,\n      publish: 1,\n      subscribe: 1,\n    };\n  }\n\n  publish(\n    publisher: Publisher,\n    callback?: (error?: OTError) => void\n  ): Publisher;\n\n  publish(\n    targetElement: string | HTMLElement,\n    properties?: OT.PublisherProperties,\n    callback?: (error?: OTError) => void\n  ): Publisher;\n\n  publish(\n    publisher: string | HTMLElement | Publisher,\n    properties?: any,\n    callback?: (error?: OTError) => void\n  ): Publisher {\n    if (typeof publisher === \"string\" || publisher instanceof HTMLElement) {\n      throw new Error(\"Not yet implemented\");\n    }\n\n    if (!window.call) {\n      console.error(\"No daily call object\");\n      return publisher as Publisher;\n    }\n\n    window.call\n      .join({\n        url: this.sessionId,\n      })\n      .then((participants) => {\n        console.debug(\"publish participants:\", participants);\n        if (!participants) return;\n\n        const videoTrack = participants.local.videoTrack;\n        if (!videoTrack) {\n          console.debug(\"No local video track\");\n          return publisher;\n        }\n\n        let t =\n          publisher.dailyElementId !== undefined\n            ? document.getElementById(publisher.dailyElementId)\n            : null;\n\n        if (t === null) {\n          console.log(t);\n          t = document.createElement<\"div\">(\"div\");\n          document.body.appendChild(t);\n        }\n\n        let videoEl = t.getElementsByTagName(\"video\")[0];\n\n        if (!t.getElementsByTagName(\"video\")[0]) {\n          videoEl = document.createElement(\"video\");\n          t.appendChild(videoEl);\n        }\n\n        // TODO(jamsea): handle all insert modes https://tokbox.com/developer/sdks/js/reference/OT.html#initPublisher\n        if (publisher.insertMode === \"append\") {\n          t.appendChild(videoEl);\n        }\n        videoEl.style.width = publisher.width ?? \"\";\n        videoEl.style.height = publisher.height ?? \"\";\n        videoEl.srcObject = new MediaStream([videoTrack]);\n        videoEl.play();\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n\n    return publisher;\n  }\n  connect(token: string, callback: (error?: OTError) => void): void {\n    if (!window.call) {\n      console.error(\"No call\");\n      callback({\n        message: \"No call (todo find message)\",\n        name: \"NoCall (todo find name)\",\n      });\n      return;\n    }\n\n    callback();\n  }\n  subscribe(\n    stream: DailyStream | Stream,\n    targetElement?: string | HTMLElement,\n    properties?: SubscriberProperties,\n    callback?: (error?: OTError) => void\n  ): Subscriber {\n    if (!window.call) {\n      throw new Error(\"No daily call object\");\n    }\n\n    if (!(\"dailyEvent\" in stream)) {\n      throw new Error(\"Wrong type of stream.\");\n    }\n\n    if (!stream.dailyEvent.participant) {\n      throw new Error(\"No daily participant object\");\n    }\n\n    if (!targetElement) {\n      throw new Error(\"No target element\");\n    }\n\n    const {\n      dailyEvent: {\n        participant: { user_id },\n      },\n    } = stream;\n\n    const t =\n      targetElement instanceof HTMLElement\n        ? targetElement\n        : document.getElementById(targetElement);\n\n    if (!t) {\n      throw new Error(\"No target element\");\n    }\n\n    const subscriber = new Subscriber(t);\n    if (stream.dailyEvent.participant.local) {\n      return subscriber;\n    }\n\n    if (stream.hasVideo) {\n      const videoEl =\n        (document.getElementById(`video-${user_id}`) as HTMLVideoElement) ??\n        document.createElement(\"video\");\n      videoEl.id = `video-${user_id}`;\n      t.appendChild(videoEl);\n      if (properties) {\n        videoEl.style.width = properties.width?.toString() || \"\";\n        videoEl.style.height = properties.height?.toString() || \"\";\n      }\n      videoEl.srcObject = new MediaStream([stream.dailyEvent.track]);\n      videoEl.play();\n    }\n\n    if (stream.hasAudio) {\n      const audioEl =\n        (document.getElementById(`audio-${user_id}`) as HTMLAudioElement) ??\n        document.createElement(\"audio\");\n      audioEl.id = `audio-${user_id}`;\n      t.appendChild(audioEl);\n      audioEl.srcObject = new MediaStream([stream.dailyEvent.track]);\n      audioEl.play();\n    }\n\n    return subscriber;\n  }\n  disconnect(): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  forceDisconnect(\n    connection: OT.Connection,\n    callback: (error?: OTError) => void\n  ): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  forceUnpublish(stream: Stream, callback: (error?: OTError) => void): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  forceMuteStream(stream: Stream): Promise<void> {\n    return new Promise((resolve, reject) => {\n      reject(new Error(\"Method not implemented.\"));\n    });\n  }\n  forceMuteAll(excludedStreams?: Stream[]): Promise<void> {\n    return new Promise((resolve, reject) => {\n      reject(new Error(\"Method not implemented.\"));\n    });\n  }\n  getPublisherForStream(stream: Stream): Publisher | undefined {\n    throw new Error(\"Method not implemented.\");\n  }\n  getSubscribersForStream(stream: Stream): [Subscriber] {\n    throw new Error(\"Method not implemented.\");\n  }\n  off() {}\n  setEncryptionSecret(secret: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      reject(new Error(\"Method not implemented.\"));\n    });\n  }\n  signal(\n    signal: { type?: string; data?: string; to?: OT.Connection },\n    callback: (error?: OTError) => void\n  ): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  unpublish(publisher: Publisher): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  unsubscribe(subscriber: Subscriber): void {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n","/Users/jamsea/git/daily-tokbox/src/Subscriber.ts",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115"],[],"import {\n  Dimensions,\n  Event,\n  OTError,\n  Stream,\n  SubscriberStats,\n  SubscriberStyle,\n  VideoDimensionsChangedEvent,\n} from \"@opentok/client\";\nimport { OTEventEmitter } from \"./OTEventEmitter\";\n\nexport class Subscriber extends OTEventEmitter<{\n  audioLevelUpdated: Event<\"audioLevelUpdated\", Subscriber> & {\n    audioLevel: number;\n  };\n\n  connected: Event<\"connected\", Subscriber>;\n\n  captionReceived: Event<\"captionReceived\", Subscriber> & {\n    streamId: string;\n    caption: string;\n  };\n\n  destroyed: Event<\"destroyed\", Subscriber> & {\n    reason: string;\n  };\n\n  encryptionSecretMismatch: Event<\"encryptionSecretMismatch\", Subscriber>;\n\n  encryptionSecretMatch: Event<\"encryptionSecretMatch\", Subscriber>;\n\n  videoDimensionsChanged: VideoDimensionsChangedEvent<Subscriber>;\n\n  videoDisabled: Event<\"videoDisabled\", Subscriber> & {\n    reason: string;\n  };\n\n  videoDisableWarning: Event<\"videoDisableWarning\", Subscriber>;\n  videoDisableWarningLifted: Event<\"videoDisableWarningLifted\", Subscriber>;\n\n  videoElementCreated: Event<\"videoElementCreated\", Subscriber> & {\n    element: HTMLVideoElement | HTMLObjectElement;\n  };\n\n  videoEnabled: Event<\"videoEnabled\", Subscriber> & {\n    reason: string;\n  };\n}> {\n  element?: HTMLElement;\n  id?: string;\n  stream?: Stream;\n\n  constructor(\n    targetElement: HTMLElement,\n    options: any = {},\n    completionHandler: any = () => {}\n  ) {\n    super();\n    this.element = targetElement;\n    this.id = options?.id;\n    this.stream = options?.stream;\n  }\n\n  getAudioVolume(): number {\n    throw new Error(\"Method not implemented.\");\n  }\n  getImgData(): string | null {\n    throw new Error(\"Method not implemented.\");\n  }\n  getStats(callback: (error?: OTError, stats?: SubscriberStats) => void): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  getRtcStatsReport(): Promise<RTCStatsReport> {\n    throw new Error(\"Method not implemented.\");\n  }\n  subscribeToCaptions(value: boolean): Promise<void> {\n    throw new Error(\"Method not implemented.\");\n  }\n  isSubscribedToCaptions(): boolean {\n    throw new Error(\"Method not implemented.\");\n  }\n  isAudioBlocked(): boolean {\n    throw new Error(\"Method not implemented.\");\n  }\n  restrictFrameRate(value: boolean): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  setAudioVolume(volume: number): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  setPreferredFrameRate(frameRate: number): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  setPreferredResolution(resolution: Dimensions): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  subscribeToAudio(value: boolean): void {\n    throw new Error(\"Method not implemented.\");\n  }\n  subscribeToVideo(value: boolean): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  setStyle<Style extends keyof SubscriberStyle>(\n    style: Style,\n    value: SubscriberStyle[Style]\n  ): void {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  videoHeight(): number | undefined {\n    throw new Error(\"Method not implemented.\");\n  }\n  videoWidth(): number | undefined {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n","/Users/jamsea/git/daily-tokbox/src/env.d.ts",[],[],"/Users/jamsea/git/daily-tokbox/src/example.ts",["116"],[],"import \"./example.css\";\n\n// import { Event as OTEvent, Session } from \"@opentok/client\";\n// type StreamCreatedEvent = OTEvent<\"streamCreated\", Session>;\n\n// import * as OT from \"@opentok/client\";\n// const {\n//   VITE_TOKBOX_API_KEY: apiKey = \"\",\n//   VITE_TOKBOX_SESSION_ID: sessionId = \"\",\n//   VITE_TOKBOX_TOKEN: token = \"\",\n// } = import.meta.env;\n\nimport * as OT from \"./\";\n\nconst { VITE_DAILY_TOKEN: apiKey = \"\" } = import.meta.env;\nconst sessionId = \"https://hush.daily.co/meet\";\nconst token = \"\";\n\nfunction handleError(error: any) {\n  if (error) {\n    console.error(\"handleError: \", error);\n  }\n}\n\n// sessionId becomes daily's room url\nconst session = OT.initSession(apiKey, sessionId);\n\n// Subscribe to a newly created stream\nsession.on(\"streamCreated\", function streamCreated(event) {\n  console.debug(\"[streamCreated] index.ts: \", event);\n  // This is daily remote user stuff\n  session.subscribe(\n    event.stream,\n    \"subscriber\",\n    {\n      insertMode: \"append\",\n      width: \"100%\",\n      height: \"100%\",\n    },\n    handleError\n  );\n});\n\nsession.on(\"sessionDisconnected\", function sessionDisconnected(event) {\n  console.log(\"You were disconnected from the session.\", event.reason);\n});\n\nconst publisher = OT.initPublisher(\n  \"publisher\",\n  {\n    insertMode: \"append\",\n    width: \"100%\",\n    height: \"100%\",\n  },\n  handleError\n);\n\n// Connect to the session\nsession.connect(token, function callback(error) {\n  // This is daily local user stuff\n  if (error) {\n    handleError(error);\n  } else {\n    // If the connection is successful, publish the publisher to the session\n    session.publish(publisher, handleError);\n  }\n});\n","/Users/jamsea/git/daily-tokbox/src/global.d.ts",[],[],"/Users/jamsea/git/daily-tokbox/src/index.ts",[],[],"/Users/jamsea/git/daily-tokbox/vite.config.js",[],[],{"ruleId":"117","severity":1,"message":"118","line":30,"column":49,"nodeType":"119","messageId":"120","endLine":30,"endColumn":65},{"ruleId":"121","severity":2,"message":"122","line":32,"column":29,"nodeType":"119","messageId":"123","endLine":32,"endColumn":37},{"ruleId":"117","severity":1,"message":"118","line":50,"column":39,"nodeType":"119","messageId":"120","endLine":50,"endColumn":52},{"ruleId":"121","severity":2,"message":"122","line":57,"column":29,"nodeType":"119","messageId":"123","endLine":57,"endColumn":37},{"ruleId":"117","severity":1,"message":"118","line":74,"column":38,"nodeType":"119","messageId":"120","endLine":74,"endColumn":51},{"ruleId":"121","severity":2,"message":"122","line":81,"column":28,"nodeType":"119","messageId":"123","endLine":81,"endColumn":36},{"ruleId":"117","severity":1,"message":"124","line":76,"column":5,"nodeType":"119","messageId":"120","endLine":76,"endColumn":67},{"ruleId":"117","severity":1,"message":"125","line":88,"column":20,"nodeType":"119","messageId":"120","endLine":88,"endColumn":44},{"ruleId":"117","severity":1,"message":"126","line":101,"column":16,"nodeType":"119","messageId":"120","endLine":101,"endColumn":30},{"ruleId":"117","severity":1,"message":"126","line":104,"column":16,"nodeType":"119","messageId":"120","endLine":104,"endColumn":30},{"ruleId":"117","severity":1,"message":"126","line":107,"column":19,"nodeType":"119","messageId":"120","endLine":107,"endColumn":33},{"ruleId":"117","severity":1,"message":"127","line":115,"column":18,"nodeType":"119","messageId":"120","endLine":115,"endColumn":56},{"ruleId":"117","severity":1,"message":"128","line":116,"column":25,"nodeType":"119","messageId":"120","endLine":116,"endColumn":32},{"ruleId":"117","severity":1,"message":"129","line":116,"column":34,"nodeType":"119","messageId":"120","endLine":116,"endColumn":40},{"ruleId":"117","severity":1,"message":"130","line":123,"column":18,"nodeType":"119","messageId":"120","endLine":123,"endColumn":39},{"ruleId":"117","severity":1,"message":"131","line":131,"column":23,"nodeType":"119","messageId":"120","endLine":131,"endColumn":45},{"ruleId":"117","severity":1,"message":"132","line":142,"column":5,"nodeType":"119","messageId":"120","endLine":142,"endColumn":17},{"ruleId":"117","severity":1,"message":"126","line":143,"column":5,"nodeType":"119","messageId":"120","endLine":143,"endColumn":33},{"ruleId":"117","severity":1,"message":"133","line":85,"column":50,"nodeType":"119","messageId":"120","endLine":85,"endColumn":58},{"ruleId":"117","severity":1,"message":"134","line":113,"column":5,"nodeType":"119","messageId":"120","endLine":113,"endColumn":21},{"ruleId":"117","severity":1,"message":"124","line":114,"column":5,"nodeType":"119","messageId":"120","endLine":114,"endColumn":41},{"ruleId":"135","severity":1,"message":"136","line":120,"column":10,"nodeType":"137","messageId":"138","endLine":120,"endColumn":21},{"ruleId":"139","severity":2,"message":"140","line":122,"column":14,"nodeType":"141","messageId":"142","endLine":122,"endColumn":36,"fix":"143"},{"ruleId":"135","severity":1,"message":"136","line":152,"column":14,"nodeType":"137","messageId":"138","endLine":152,"endColumn":48},{"ruleId":"144","severity":2,"message":"145","line":164,"column":9,"nodeType":"146","messageId":"147","endLine":164,"endColumn":24,"suggestions":"148"},{"ruleId":"135","severity":1,"message":"136","line":173,"column":10,"nodeType":"137","messageId":"138","endLine":173,"endColumn":21},{"ruleId":"117","severity":1,"message":"124","line":188,"column":5,"nodeType":"119","messageId":"120","endLine":188,"endColumn":41},{"ruleId":"135","severity":1,"message":"136","line":190,"column":10,"nodeType":"137","messageId":"138","endLine":190,"endColumn":21},{"ruleId":"135","severity":1,"message":"149","line":228,"column":10,"nodeType":"141","messageId":"150","endLine":228,"endColumn":73},{"ruleId":"151","severity":1,"message":"152","line":233,"column":60,"nodeType":"153","messageId":"154","endLine":233,"endColumn":62,"suggestions":"155"},{"ruleId":"151","severity":1,"message":"152","line":234,"column":62,"nodeType":"153","messageId":"154","endLine":234,"endColumn":64,"suggestions":"156"},{"ruleId":"144","severity":2,"message":"145","line":237,"column":7,"nodeType":"146","messageId":"147","endLine":237,"endColumn":22,"suggestions":"157"},{"ruleId":"135","severity":1,"message":"149","line":242,"column":10,"nodeType":"141","messageId":"150","endLine":242,"endColumn":73},{"ruleId":"144","severity":2,"message":"145","line":247,"column":7,"nodeType":"146","messageId":"147","endLine":247,"endColumn":22,"suggestions":"158"},{"ruleId":"117","severity":1,"message":"159","line":256,"column":5,"nodeType":"119","messageId":"120","endLine":256,"endColumn":30},{"ruleId":"117","severity":1,"message":"124","line":257,"column":5,"nodeType":"119","messageId":"120","endLine":257,"endColumn":40},{"ruleId":"117","severity":1,"message":"160","line":261,"column":18,"nodeType":"119","messageId":"120","endLine":261,"endColumn":32},{"ruleId":"117","severity":1,"message":"124","line":261,"column":34,"nodeType":"119","messageId":"120","endLine":261,"endColumn":69},{"ruleId":"117","severity":1,"message":"160","line":264,"column":19,"nodeType":"119","messageId":"120","endLine":264,"endColumn":33},{"ruleId":"117","severity":1,"message":"161","line":269,"column":16,"nodeType":"119","messageId":"120","endLine":269,"endColumn":42},{"ruleId":"117","severity":1,"message":"160","line":274,"column":25,"nodeType":"119","messageId":"120","endLine":274,"endColumn":39},{"ruleId":"117","severity":1,"message":"160","line":277,"column":27,"nodeType":"119","messageId":"120","endLine":277,"endColumn":41},{"ruleId":"162","severity":2,"message":"163","line":280,"column":9,"nodeType":"164","messageId":"165","endLine":280,"endColumn":11},{"ruleId":"117","severity":1,"message":"166","line":281,"column":23,"nodeType":"119","messageId":"120","endLine":281,"endColumn":37},{"ruleId":"117","severity":1,"message":"167","line":287,"column":5,"nodeType":"119","messageId":"120","endLine":287,"endColumn":65},{"ruleId":"117","severity":1,"message":"124","line":288,"column":5,"nodeType":"119","messageId":"120","endLine":288,"endColumn":40},{"ruleId":"117","severity":1,"message":"168","line":292,"column":13,"nodeType":"119","messageId":"120","endLine":292,"endColumn":33},{"ruleId":"117","severity":1,"message":"169","line":295,"column":15,"nodeType":"119","messageId":"120","endLine":295,"endColumn":37},{"ruleId":"117","severity":1,"message":"170","line":56,"column":5,"nodeType":"119","messageId":"120","endLine":56,"endColumn":27},{"ruleId":"162","severity":2,"message":"171","line":56,"column":36,"nodeType":"172","messageId":"165","endLine":56,"endColumn":38},{"ruleId":"173","severity":2,"message":"174","line":60,"column":5,"nodeType":"175","messageId":"176","endLine":60,"endColumn":26},{"ruleId":"177","severity":2,"message":"178","line":60,"column":15,"nodeType":"137","messageId":"179","endLine":60,"endColumn":26},{"ruleId":"173","severity":2,"message":"174","line":61,"column":5,"nodeType":"175","messageId":"176","endLine":61,"endColumn":34},{"ruleId":"177","severity":2,"message":"180","line":61,"column":19,"nodeType":"137","messageId":"179","endLine":61,"endColumn":34},{"ruleId":"117","severity":1,"message":"124","line":70,"column":12,"nodeType":"119","messageId":"120","endLine":70,"endColumn":72},{"ruleId":"117","severity":1,"message":"126","line":76,"column":23,"nodeType":"119","messageId":"120","endLine":76,"endColumn":37},{"ruleId":"117","severity":1,"message":"126","line":85,"column":21,"nodeType":"119","messageId":"120","endLine":85,"endColumn":35},{"ruleId":"117","severity":1,"message":"181","line":88,"column":18,"nodeType":"119","messageId":"120","endLine":88,"endColumn":32},{"ruleId":"117","severity":1,"message":"182","line":91,"column":25,"nodeType":"119","messageId":"120","endLine":91,"endColumn":42},{"ruleId":"117","severity":1,"message":"183","line":94,"column":26,"nodeType":"119","messageId":"120","endLine":94,"endColumn":48},{"ruleId":"117","severity":1,"message":"126","line":97,"column":20,"nodeType":"119","messageId":"120","endLine":97,"endColumn":34},{"ruleId":"117","severity":1,"message":"126","line":100,"column":20,"nodeType":"119","messageId":"120","endLine":100,"endColumn":34},{"ruleId":"117","severity":1,"message":"132","line":105,"column":5,"nodeType":"119","messageId":"120","endLine":105,"endColumn":17},{"ruleId":"117","severity":1,"message":"126","line":106,"column":5,"nodeType":"119","messageId":"120","endLine":106,"endColumn":34},{"ruleId":"121","severity":2,"message":"184","line":26,"column":32,"nodeType":"119","messageId":"123","endLine":26,"endColumn":38},"@typescript-eslint/no-unused-vars","'context' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unsafe-argument","Unsafe argument of type `any` assigned to a parameter of type `(...args: any[]) => void`.","unsafeArgument","'callback' is defined but never used.","'videoFilter' is defined but never used.","'value' is defined but never used.","'audioSource' is defined but never used.","'resolve' is defined but never used.","'reject' is defined but never used.","'videoSourceId' is defined but never used.","'hint' is defined but never used.","'style' is defined but never used.","'opt' is defined but never used.","'properties' is defined but never used.","@typescript-eslint/no-unnecessary-condition","Unnecessary conditional, value is always falsy.","MemberExpression","alwaysFalsy","@typescript-eslint/no-unnecessary-type-assertion","This assertion is unnecessary since it does not change the type of the expression.","TSAsExpression","unnecessaryAssertion",{"range":"185","text":"186"},"@typescript-eslint/no-floating-promises","Promises must be awaited, end with a call to .catch, end with a call to .then with a rejection handler or be explicitly marked as ignored with the `void` operator.","ExpressionStatement","floatingVoid",["187"],"Unnecessary conditional, expected left-hand side of `??` operator to be possibly null or undefined.","neverNullish","@typescript-eslint/prefer-nullish-coalescing","Prefer using nullish coalescing operator (`??`) instead of a logical or (`||`), as it is a safer operator.","Punctuator","preferNullishOverOr",["188"],["189"],["190"],["191"],"'connection' is defined but never used.","'stream' is defined but never used.","'excludedStreams' is defined but never used.","@typescript-eslint/no-empty-function","Unexpected empty method 'off'.","FunctionExpression","unexpected","'secret' is defined but never used.","'signal' is defined but never used.","'publisher' is defined but never used.","'subscriber' is defined but never used.","'completionHandler' is assigned a value but never used.","Unexpected empty arrow function.","ArrowFunctionExpression","@typescript-eslint/no-unsafe-assignment","Unsafe assignment of an `any` value.","AssignmentExpression","anyAssignment","@typescript-eslint/no-unsafe-member-access","Unsafe member access .id on an `any` value.","unsafeMemberExpression","Unsafe member access .stream on an `any` value.","'volume' is defined but never used.","'frameRate' is defined but never used.","'resolution' is defined but never used.","Unsafe argument of type `any` assigned to a parameter of type `string`.",[3073,3085],"",{"messageId":"192","fix":"193","desc":"194"},{"messageId":"195","fix":"196","desc":"197"},{"messageId":"195","fix":"198","desc":"197"},{"messageId":"192","fix":"199","desc":"194"},{"messageId":"192","fix":"200","desc":"194"},"floatingFixVoid",{"range":"201","text":"202"},"Add void operator to ignore.","suggestNullish",{"range":"203","text":"204"},"Fix to nullish coalescing operator (`??`).",{"range":"205","text":"204"},{"range":"206","text":"202"},{"range":"207","text":"208"},[4364,4379],"void videoEl.play();",[6027,6029],"??",[6095,6097],[6186,6201],[6521,6536],"void audioEl.play();"]